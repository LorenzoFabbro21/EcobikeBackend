version: "3"
services:
  postgres-user:
    container_name: postgres-user
    image: postgres
    environment:
      POSTGRES_DB: user-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./postgres-user:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always

    ## Mongo Docker Compose Config
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  ## Eureka Server
  service-discovery-server:
    image: service-discovery-server:latest
    container_name: service-discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - opnet
  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - service-discovery-server
    networks:
      - opnet
  ## Product-Service Docker Compose Config
  recensione-service:
    container_name: recensione-service
    image: recensione-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
          - "8082:8082"
    depends_on:
      - mongo
      - service-discovery-server
      - api-gateway
    networks:
      - opnet
  ## Order-Service Docker Compose Config
  user-service:
    container_name: user-service
    image: user-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5431/user-service
    ports:
          - "8081:8081"
    depends_on:
      - postgres-user
      - service-discovery-server
      - api-gateway
    networks:
      - opnet
networks:
  opnet:
    driver: bridge
