version: "3"
services:
  frontend:
    build: ./Frontend
    container_name: frontend
    ports:
      - "4200:80"
    networks:
      - opnet
    depends_on:
      - ad-service
      - appointment-service
      - bike-service
      - api-gateway
      - booking-service
      - recensione-service
      - shop-service
      - user-service
  postgres-user:
    container_name: postgres-user
    image: "postgres:9.6-alpine"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
      - POSTGRES_DB=user_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    volumes:
      - user-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - opnet

  postgres-review:
    container_name: postgres-review
    image: "postgres:9.6-alpine"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
      - POSTGRES_DB=recensione_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    volumes:
      - review-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - opnet
  postgres-shop:
    container_name: postgres-shop
    image: "postgres:9.6-alpine"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
      - POSTGRES_DB=shop_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    volumes:
      - shop-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - opnet

  postgres-bike:
    container_name: postgres-bike
    image: "postgres:9.6-alpine"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
      - POSTGRES_DB=bike_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    volumes:
      - bike-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - opnet

  postgres-ad:
    container_name: postgres-ad
    image: "postgres:9.6-alpine"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
      - POSTGRES_DB=ad_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    volumes:
      - ad-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - opnet

  postgres-booking:
    container_name: postgres-booking
    image: "postgres:9.6-alpine"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
      - POSTGRES_DB=booking_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    volumes:
      - booking-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - opnet

  postgres-appointment:
    container_name: postgres-appointment
    image: "postgres:9.6-alpine"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
      - POSTGRES_DB=appointment_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    volumes:
      - appointment-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - opnet
  ## Eureka Server
  service-discovery-server:
    image: service-discovery-server:latest
    container_name: service-discovery-server
    ports:
      - "8761:8761"
    networks:
      - opnet
  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8080:8080"
    depends_on:
      - service-discovery-server
    networks:
      - opnet
  ## Product-Service Docker Compose Config
  recensione-service:
    container_name: recensione-service
    image: recensione-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_SERVER=postgres-review
      - POSTGRES_DB=recensione_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8082:8082"
    depends_on:
      - postgres-review
      - service-discovery-server
    networks:
      - opnet
  ## Order-Service Docker Compose Config
  user-service:
    container_name: user-service
    image: user-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_SERVER=postgres-user
      - POSTGRES_DB=user_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8081:8081"
    depends_on:
      - postgres-user
      - service-discovery-server
    networks:
      - opnet

  shop-service:
    container_name: shop-service
    image: shop-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_SERVER=postgres-shop
      - POSTGRES_DB=shop_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8083:8083"
    depends_on:
      - postgres-shop
      - service-discovery-server
    networks:
      - opnet

  bike-service:
    container_name: bike-service
    image: bike-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_SERVER=postgres-bike
      - POSTGRES_DB=bike_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8088:8088"
    depends_on:
      - postgres-bike
      - service-discovery-server
    networks:
      - opnet

  ad-service:
    container_name: ad-service
    image: ad-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_SERVER=postgres-ad
      - POSTGRES_DB=ad_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8084:8084"
    depends_on:
      - postgres-ad
      - service-discovery-server
    networks:
      - opnet
  booking-service:
    container_name: booking-service
    image: booking-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_SERVER=postgres-booking
      - POSTGRES_DB=booking_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8085:8085"
    depends_on:
      - postgres-booking
      - service-discovery-server
    networks:
      - opnet
  appointment-service:
    container_name: appointment-service
    image: appointment-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_SERVER=postgres-appointment
      - POSTGRES_DB=appointment_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - eureka.client.serviceUrl.defaultZone=http://service-discovery-server:8761/eureka/
    ports:
      - "8086:8086"
    depends_on:
      - postgres-appointment
      - service-discovery-server
    networks:
      - opnet

volumes:
  shop-postgres-data:
  user-postgres-data:
  ad-postgres-data:
  review-postgres-data:
  booking-postgres-data:
  appointment-postgres-data:
  bike-postgres-data:

networks:
  opnet:
    driver: bridge
