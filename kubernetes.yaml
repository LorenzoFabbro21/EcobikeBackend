---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: ad-service
  name: ad-service
spec:
  ports:
    - name: "8084"
      port: 8084
      targetPort: 8084
  selector:
    io.kompose.service: ad-service
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
spec:
  type: NodePort
  ports:
    - name: "30080"
      port: 30080
      targetPort: 8080
      nodePort: 30080
  selector:
    io.kompose.service: api-gateway
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: appointment-service
  name: appointment-service
spec:
  ports:
    - name: "8086"
      port: 8086
      targetPort: 8086
  selector:
    io.kompose.service: appointment-service
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: authentication-service
  name: authentication-service
spec:
  type: NodePort
  ports:
    - name: "30090"
      port: 30090
      targetPort: 8090
      nodePort: 30090
  selector:
    io.kompose.service: authentication-service
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: bike-service
  name: bike-service
spec:
  ports:
    - name: "8087"
      port: 8087
      targetPort: 8087
  selector:
    io.kompose.service: bike-service
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: booking-service
  name: booking-service
spec:
  ports:
    - name: "8085"
      port: 8085
      targetPort: 8085
  selector:
    io.kompose.service: booking-service
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  type: NodePort
  ports:
    - name: "32000"
      port: 32000
      targetPort: 5000
      nodePort: 32000
  selector:
    io.kompose.service: frontend
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-ad
  name: postgres-ad
spec:
  ports:
    - name: "5436"
      port: 5436
      targetPort: 5432
  selector:
    io.kompose.service: postgres-ad
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-appointment
  name: postgres-appointment
spec:
  ports:
    - name: "5438"
      port: 5438
      targetPort: 5432
  selector:
    io.kompose.service: postgres-appointment
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-bike
  name: postgres-bike
spec:
  ports:
    - name: "5435"
      port: 5435
      targetPort: 5432
  selector:
    io.kompose.service: postgres-bike
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-booking
  name: postgres-booking
spec:
  ports:
    - name: "5437"
      port: 5437
      targetPort: 5432
  selector:
    io.kompose.service: postgres-booking
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-review
  name: postgres-review
spec:
  ports:
    - name: "5433"
      port: 5433
      targetPort: 5432
  selector:
    io.kompose.service: postgres-review
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-shop
  name: postgres-shop
spec:
  ports:
    - name: "5434"
      port: 5434
      targetPort: 5432
  selector:
    io.kompose.service: postgres-shop
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-user
  name: postgres-user
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgres-user
status:
  loadBalancer: {}
---
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "15672"
      port: 15672
      targetPort: 15672
    - name: "5672"
      port: 5672
      targetPort: 5672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: recensione-service
  name: recensione-service
spec:
  ports:
    - name: "8082"
      port: 8082
      targetPort: 8082
  selector:
    io.kompose.service: recensione-service
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: service-discovery-server
  name: service-discovery-server
spec:
  ports:
    - name: "8761"
      port: 8761
      targetPort: 8761
  selector:
    io.kompose.service: service-discovery-server
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: shop-service
  name: shop-service
spec:
  ports:
    - name: "8083"
      port: 8083
      targetPort: 8083
  selector:
    io.kompose.service: shop-service
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: user-service
  name: user-service
spec:
  ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
  selector:
    io.kompose.service: user-service
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: ad-service
  name: ad-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ad-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: ad-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-ad:5436/ad_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: lorenzofabbro/ad-service
          name: ad-service
          ports:
            - containerPort: 8084
              hostPort: 8084
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api-gateway
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: api-gateway
    spec:
      containers:
        - env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
          image: lorenzofabbro/api-gateway
          name: api-gateway
          ports:
            - containerPort: 8080
              hostPort: 30080
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: appointment-service
  name: appointment-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: appointment-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: appointment-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-appointment:5438/appointment_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: lorenzofabbro/appointment-service
          name: appointment-service
          ports:
            - containerPort: 8086
              hostPort: 8086
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: authentication-service
  name: authentication-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: authentication-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: authentication-service
    spec:
      containers:
        - env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: lorenzofabbro/authentication-service
          name: authentication-service
          ports:
            - containerPort: 8090
              hostPort: 30090
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: bike-service
  name: bike-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: bike-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: bike-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-bike:5435/bike_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: lorenzofabbro/bike-service
          name: bike-service
          ports:
            - containerPort: 8087
              hostPort: 8087
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: booking-service
  name: booking-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: booking-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: booking-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-booking:5437/booking_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: lorenzofabbro/booking-service
          name: booking-service
          ports:
            - containerPort: 8085
              hostPort: 8085
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frontend
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: frontend
    spec:
      containers:
        - image: lorenzofabbro/frontend
          name: frontend
          ports:
            - containerPort: 5000
              hostPort: 32000
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-ad
  name: postgres-ad
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-ad
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: postgres-ad
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: ad_db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres-ad
          ports:
            - containerPort: 5432
              hostPort: 5436
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: ad-postgres-data
      restartPolicy: Always
      volumes:
        - name: ad-postgres-data
          persistentVolumeClaim:
            claimName: ad-postgres-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: ad-postgres-data
  name: ad-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-appointment
  name: postgres-appointment
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-appointment
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: postgres-appointment
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: appointment_db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres-appointment
          ports:
            - containerPort: 5432
              hostPort: 5438
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: appointment-postgres-data
      restartPolicy: Always
      volumes:
        - name: appointment-postgres-data
          persistentVolumeClaim:
            claimName: appointment-postgres-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: appointment-postgres-data
  name: appointment-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-bike
  name: postgres-bike
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-bike
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: postgres-bike
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: bike_db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres-bike
          ports:
            - containerPort: 5432
              hostPort: 5435
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: bike-postgres-data
      restartPolicy: Always
      volumes:
        - name: bike-postgres-data
          persistentVolumeClaim:
            claimName: bike-postgres-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: bike-postgres-data
  name: bike-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-booking
  name: postgres-booking
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-booking
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: postgres-booking
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: booking_db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres-booking
          ports:
            - containerPort: 5432
              hostPort: 5437
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: booking-postgres-data
      restartPolicy: Always
      volumes:
        - name: booking-postgres-data
          persistentVolumeClaim:
            claimName: booking-postgres-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: booking-postgres-data
  name: booking-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-review
  name: postgres-review
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-review
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: postgres-review
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: review_db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres-review
          ports:
            - containerPort: 5432
              hostPort: 5433
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: review-postgres-data
      restartPolicy: Always
      volumes:
        - name: review-postgres-data
          persistentVolumeClaim:
            claimName: review-postgres-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: review-postgres-data
  name: review-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-shop
  name: postgres-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-shop
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: postgres-shop
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: shop_db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres-shop
          ports:
            - containerPort: 5432
              hostPort: 5434
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: shop-postgres-data
      restartPolicy: Always
      volumes:
        - name: shop-postgres-data
          persistentVolumeClaim:
            claimName: shop-postgres-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: shop-postgres-data
  name: shop-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-user
  name: postgres-user
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-user
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: postgres-user
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: user_db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres-user
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: user-postgres-data
      restartPolicy: Always
      volumes:
        - name: user-postgres-data
          persistentVolumeClaim:
            claimName: user-postgres-data
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - image: rabbitmq:3-management
          name: rabbitmq
          ports:
            - containerPort: 15672
              hostPort: 15672
              protocol: TCP
            - containerPort: 5672
              hostPort: 5672
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: data-rabbitmq
      restartPolicy: Always
      volumes:
        - name: data-rabbitmq
          persistentVolumeClaim:
            claimName: data-rabbitmq
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: user-postgres-data
  name: user-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: data-rabbitmq
  name: data-rabbitmq
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: recensione-service
  name: recensione-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: recensione-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: recensione-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-review:5433/review_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
          image: lorenzofabbro/recensione-service:latest
          name: recensione-service
          ports:
            - containerPort: 8082
              hostPort: 8082
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: service-discovery-server
  name: service-discovery-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: service-discovery-server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: service-discovery-server
    spec:
      containers:
        - image: lorenzofabbro/service-discovery-server
          name: service-discovery-server
          ports:
            - containerPort: 8761
              hostPort: 8761
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: shop-service
  name: shop-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: shop-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: shop-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-shop:5434/shop_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
          image: lorenzofabbro/shop-service
          name: shop-service
          ports:
            - containerPort: 8083
              hostPort: 8083
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: user-service
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: user-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\fabbr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f compose.yml --out kubernetes.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ecobike-opnet: "true"
        io.kompose.service: user-service
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-user:5432/user_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://service-discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
          image: lorenzofabbro/user-service
          name: user-service
          ports:
            - containerPort: 8081
              hostPort: 8081
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

